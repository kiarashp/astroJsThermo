---
import type { GetStaticPaths } from "astro";
import { Calendar, Clock, Tag, ArrowLeft, Share2 } from "@lucide/astro";
import Layout from "@/layouts/Layout.astro";
import { getPublishedBlogs, getRelatedBlogs } from "@/utils/blog";
import { Image } from "astro:assets";
import BlogRelatedCard from "@/components/sections/blogs/BlogRelatedCard.astro";
import { formattedDate } from "@/utils/helpers";

// Build static paths
export const getStaticPaths = (async () => {
  const blogs = await getPublishedBlogs();

  return blogs.map((entry) => ({
    params: { blogSlug: entry.slug },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

// Build astro props
const { entry } = Astro.props;
const blog = entry.data;
const { Content } = await entry.render();

// get related blogs
const relatedBlogs = await getRelatedBlogs(entry.slug, blog.category);
---

<Layout
  pageTitle={blog.title}
  description={blog.description}
  canonicalURL={blog.canonicalUrl}
  image={blog.thumbnail.src}
  ogType="article"
  pubDate={blog.pubDate}
>
  <article
    class="min-h-screen bg-base-100  max-w-none "
  >
    <!-- Hero Section -->
    <div class="relative h-[40vh] overflow-hidden bg-base-300">
      <Image
        src={blog.thumbnail}
        alt={blog.title}
        class="w-full h-full object-cover"
      />

      <div
        class="absolute inset-0 bg-gradient-to-t from-base-100 via-base-100/50 to-transparent"
      >
      </div>
    </div>

    <!-- Content Container -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 -mt-32 relative z-10">

      <!-- Back Button -->
      <a href="/blog" class="btn btn-ghost btn-sm gap-2 mb-6">
        <ArrowLeft class="w-4 h-4" />
        Back to Blogs
      </a>

      <!-- Article Card -->
      <div class="card bg-base-100 shadow-2xl mb-10">
        <div class="card-body p-8 lg:p-12">
          <!-- Category Badge -->
          <div class="flex items-center gap-2 mb-4">
            <span class="badge badge-primary badge-lg gap-2">
              <Tag class="w-3 h-3" />
              {blog.category}
            </span>
          </div>

          <!-- Title -->
          <h1 class="text-4xl lg:text-5xl font-bold text-base-content mb-6">
            {blog.title}
          </h1>

          <!-- Meta Information -->
          <div
            class="flex flex-wrap items-center gap-6 text-base-content/70 mb-8 pb-8 border-b border-base-300"
          >
            <!-- publish date -->
            <div class="flex items-center gap-2">
              <Calendar class="w-4 h-4" />
              <span class="text-sm">{formattedDate(blog.pubDate)}</span>
            </div>
            <!-- update date -->
            {
              blog.updatedDate && (
                <div class="flex items-center gap-2">
                  <Clock class="w-4 h-4" />
                  <span class="text-sm">
                    Updated: {blog.updatedDate.toDateString()}
                  </span>
                </div>
              )
            }
            <!-- author -->
            <div class="flex items-center gap-2">
              <Tag class="w-4 h-4" />
              <span class="text-sm">{blog.author}</span>
            </div>

            <!-- read time -->
            <div class="flex items-center gap-2">
              <Clock class="w-4 h-4" />
              <span class="text-sm">{blog.readTime}</span>
            </div>

          </div>

          <!-- Excerpt -->
          <div class="alert alert-info mb-8">
            <div>
              <p class="text-lg font-medium">{blog.excerpt}</p>
            </div>
          </div>

          <!-- Article Content -->
          <div class="prose prose-lg max-w-none dark:prose-invert">
            <Content />
          </div>

        </div>
      </div>

      <!-- Related Articles Section -->
      <BlogRelatedCard blogs={relatedBlogs} />
    </div>
  </article>
</Layout>

